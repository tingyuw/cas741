## \file OutputFormat.py
# \author Ting-Yu Wu
# \brief Provides the function for writing outputs
## \brief Writes the output values to output.txt
# \param inParams structure holding the input values
# \param F_vect_AC force between joint A and C (N)
# \param F_vect_AD force between joint A and D (N)
# \param F_vect_BC force between joint B and C (N)
# \param F_vect_BD force between joint B and D (N)
def write_output(inParams, F_vect_AC, F_vect_AD, F_vect_BC, F_vect_BD):
    outfile = open("log.txt", "a")
    print("function write_output called with inputs: {", file=outfile)
    print("  inParams = ", end="", file=outfile)
    print("Instance of InputParameters object", end="", file=outfile)
    print(", ", file=outfile)
    print("  F_vect_AC = ", end="", file=outfile)
    print(F_vect_AC, end="", file=outfile)
    print(", ", file=outfile)
    print("  F_vect_AD = ", end="", file=outfile)
    print(F_vect_AD, end="", file=outfile)
    print(", ", file=outfile)
    print("  F_vect_BC = ", end="", file=outfile)
    print(F_vect_BC, end="", file=outfile)
    print(", ", file=outfile)
    print("  F_vect_BD = ", end="", file=outfile)
    print(F_vect_BD, file=outfile)
    print("  }", file=outfile)
    outfile.close()
    
    outputfile = open("output.txt", "w")
    print("F_vect_Ax = ", end="", file=outputfile)
    print(inParams.F_vect_Ax, file=outputfile)
    print("F_vect_Ay = ", end="", file=outputfile)
    print(inParams.F_vect_Ay, file=outputfile)
    print("F_vect_By = ", end="", file=outputfile)
    print(inParams.F_vect_By, file=outputfile)
    print("F_vect_AC = ", end="", file=outputfile)
    print(F_vect_AC, file=outputfile)
    print("F_vect_AD = ", end="", file=outputfile)
    print(F_vect_AD, file=outputfile)
    print("F_vect_BC = ", end="", file=outputfile)
    print(F_vect_BC, file=outputfile)
    print("F_vect_BD = ", end="", file=outputfile)
    print(F_vect_BD, file=outputfile)
    print("F_vect_CD = ", end="", file=outputfile)
    print(inParams.F_vect_CD, file=outputfile)
    outputfile.close()
